trigger:
- master

stages:
  - stage: BuildStage
    jobs:
      - job: basicBuildJob
        displayName: Build job with submodules
        pool: 
          vmImage: 'ubuntu-latest'
         
        

        steps: 
        - checkout: self
          submodules: recursive

        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              # Write your commands here
              find . |grep -v git 

        - task: Bash@4
          inputs:
            targetType: 'inline'
            script: |
              RDM=$RANDOM
              echo "Random Input  = ${RDM}"
              if [ $((RDM%2)) -eq 0 ]
              then
                echo "SUCCESS"
                exit 0
              else
                echo "FAILURE"
                exit 1
              fi


  - stage: DEVDeploymentStage
    condition: succeeded('BuildStage')

    jobs:
      - deployment: DevDep
        displayName: Deploy On Dev Environment
        pool:
          vmImage: 'ubuntu-latest'
        environment: DevEnv
        strategy:
          runOnce:
            deploy: 
              steps: 
              - script: echo "My deployment on Dev Env"
        

  - stage: SecurityTestingStage
    condition: succeeded('DEVDeploymentStage')

    jobs:
      - deployment: SecurityTestingDeployment
        displayName: Deploy On !! SECUTIRY !!  Environment
        pool:
          vmImage: 'ubuntu-latest'
        environment: SecurityEnv
        strategy:
          runOnce:
            deploy: 
              steps: 
              - task: Bash@3
                inputs:
                  targetType: 'inline'
                  script: |
                    RDM=$RANDOM
                    echo "Random Input  = ${RDM}"
                    if [ $((RDM%2)) -eq 0 ]
                    then
                      echo "SUCCESS"
                      exit 0
                    else
                      echo "FAILURE"
                      exit 1
                    fi
                  failOnStderr: true
        
  - stage: QADeploymentStage
    condition: succeeded('SecurityTestingStage')

    jobs:
      - deployment: QADep
        displayName: Deploy On QA Environment
        pool:
          vmImage: 'ubuntu-latest'
        environment: QAEnv
        strategy:
          runOnce:
            deploy: 
              steps: 
              - script: echo "My deployment on QA Env"



         
 
                








